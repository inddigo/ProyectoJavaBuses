package com.mycompany.siap;

import java.awt.HeadlessException;
import javax.swing.*;
import java.util.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.text.DecimalFormat;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class VentanaRuta extends javax.swing.JFrame {

    Empresa empresa;
    
    public VentanaRuta(Empresa emp) {
        this.empresa = emp;
        
        initComponents();
        
        textFieldRuta.getDocument().addDocumentListener(new DocumentListener() 
        {
            @Override
            public void insertUpdate(DocumentEvent e) {
                actualizarTablaRuta(); // Llama al método al insertar texto
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                actualizarTablaRuta(); // Llama al método al eliminar texto
            }

            @Override
            public void changedUpdate(DocumentEvent e) 
            {
               actualizarTablaRuta();  
            }
        });
        setLocationRelativeTo(null);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AgregarRuta = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        textoOrigenNuevaRuta = new javax.swing.JTextField();
        textDestinoNuevaRuta = new javax.swing.JTextField();
        textodistanciaNuevaRuta = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        confirmarNuevaRuta = new javax.swing.JButton();
        botonCancelarNuevaRuta = new javax.swing.JButton();
        eliminarRuta = new javax.swing.JDialog();
        textoFieldEliminarRuta = new javax.swing.JTextField();
        confirmarEliminarRuta = new javax.swing.JButton();
        cancelarEliminarRuta = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        modificarRuta = new javax.swing.JDialog();
        fieldrutaMR = new javax.swing.JTextField();
        nuevoOrigenMR = new javax.swing.JTextField();
        nuevoDistanciaMR = new javax.swing.JTextField();
        tituloMR = new javax.swing.JLabel();
        confirmarMR = new javax.swing.JButton();
        cancelarMR = new javax.swing.JButton();
        nuevoDestinoMR = new javax.swing.JTextField();
        jOptionPane1 = new javax.swing.JOptionPane();
        jOptionPane2 = new javax.swing.JOptionPane();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        botonAgregarBus = new javax.swing.JButton();
        botonModificarBus = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        botonEliminarBus = new javax.swing.JButton();
        textFieldRuta = new javax.swing.JTextField();
        botonCerrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRuta = new javax.swing.JTable();

        AgregarRuta.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        AgregarRuta.setName("AgregarRuta"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel3.setText("Agregar Ruta");

        textDestinoNuevaRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDestinoNuevaRutaActionPerformed(evt);
            }
        });

        textodistanciaNuevaRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textodistanciaNuevaRutaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Ingrese el origen de la nueva ruta :");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Ingrese el destino de la nueva ruta :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Ingrese la distancia en KM de la nueva ruta :");

        confirmarNuevaRuta.setText("Confirmar");
        confirmarNuevaRuta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmarNuevaRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarNuevaRutaActionPerformed(evt);
            }
        });

        botonCancelarNuevaRuta.setText("Cancelar");
        botonCancelarNuevaRuta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonCancelarNuevaRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarNuevaRutaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AgregarRutaLayout = new javax.swing.GroupLayout(AgregarRuta.getContentPane());
        AgregarRuta.getContentPane().setLayout(AgregarRutaLayout);
        AgregarRutaLayout.setHorizontalGroup(
            AgregarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AgregarRutaLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(botonCancelarNuevaRuta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confirmarNuevaRuta)
                .addGap(39, 39, 39))
            .addGroup(AgregarRutaLayout.createSequentialGroup()
                .addGroup(AgregarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AgregarRutaLayout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AgregarRutaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)
                        .addComponent(textoOrigenNuevaRuta, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(AgregarRutaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(120, 120, 120)
                .addComponent(textDestinoNuevaRuta)
                .addContainerGap())
            .addGroup(AgregarRutaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(51, 51, 51)
                .addComponent(textodistanciaNuevaRuta, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                .addContainerGap())
        );
        AgregarRutaLayout.setVerticalGroup(
            AgregarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgregarRutaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(38, 38, 38)
                .addGroup(AgregarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(textoOrigenNuevaRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(AgregarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(textDestinoNuevaRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(AgregarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(textodistanciaNuevaRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addGroup(AgregarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmarNuevaRuta)
                    .addComponent(botonCancelarNuevaRuta))
                .addGap(24, 24, 24))
        );

        eliminarRuta.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        confirmarEliminarRuta.setText("Confirmar");
        confirmarEliminarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarEliminarRutaActionPerformed(evt);
            }
        });

        cancelarEliminarRuta.setText("Cancelar");
        cancelarEliminarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarEliminarRutaActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel10.setText("Ingrese la ruta a eliminar");

        javax.swing.GroupLayout eliminarRutaLayout = new javax.swing.GroupLayout(eliminarRuta.getContentPane());
        eliminarRuta.getContentPane().setLayout(eliminarRutaLayout);
        eliminarRutaLayout.setHorizontalGroup(
            eliminarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, eliminarRutaLayout.createSequentialGroup()
                .addGap(0, 159, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(112, 112, 112))
            .addGroup(eliminarRutaLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(cancelarEliminarRuta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(confirmarEliminarRuta)
                .addGap(47, 47, 47))
            .addGroup(eliminarRutaLayout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(textoFieldEliminarRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        eliminarRutaLayout.setVerticalGroup(
            eliminarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eliminarRutaLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel10)
                .addGap(34, 34, 34)
                .addComponent(textoFieldEliminarRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(eliminarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmarEliminarRuta)
                    .addComponent(cancelarEliminarRuta))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        modificarRuta.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        modificarRuta.setTitle("Menu Modificar Ruta");

        fieldrutaMR.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingrese la id de la ruta a modificar"));
        fieldrutaMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldrutaMRActionPerformed(evt);
            }
        });

        nuevoOrigenMR.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingrese  el nuevo origen de la ruta"));
        nuevoOrigenMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoOrigenMRActionPerformed(evt);
            }
        });

        nuevoDistanciaMR.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingrese La nuevo en distancia (KM)"));
        nuevoDistanciaMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoDistanciaMRActionPerformed(evt);
            }
        });

        tituloMR.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        tituloMR.setText("Menu modificar Ruta");

        confirmarMR.setText("Confirmar");
        confirmarMR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmarMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarMRActionPerformed(evt);
            }
        });

        cancelarMR.setText("Cancelar");
        cancelarMR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelarMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarMRActionPerformed(evt);
            }
        });

        nuevoDestinoMR.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingrese el nuevo destino de la ruta"));
        nuevoDestinoMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoDestinoMRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout modificarRutaLayout = new javax.swing.GroupLayout(modificarRuta.getContentPane());
        modificarRuta.getContentPane().setLayout(modificarRutaLayout);
        modificarRutaLayout.setHorizontalGroup(
            modificarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modificarRutaLayout.createSequentialGroup()
                .addGroup(modificarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nuevoDistanciaMR, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(modificarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(modificarRutaLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(nuevoDestinoMR, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, modificarRutaLayout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addGroup(modificarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(fieldrutaMR, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nuevoOrigenMR, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(299, Short.MAX_VALUE))
            .addGroup(modificarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(modificarRutaLayout.createSequentialGroup()
                    .addGroup(modificarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(modificarRutaLayout.createSequentialGroup()
                            .addGap(482, 482, 482)
                            .addComponent(confirmarMR))
                        .addGroup(modificarRutaLayout.createSequentialGroup()
                            .addGap(70, 70, 70)
                            .addGroup(modificarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cancelarMR)
                                .addComponent(tituloMR, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        modificarRutaLayout.setVerticalGroup(
            modificarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modificarRutaLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(fieldrutaMR, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(nuevoOrigenMR, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(nuevoDestinoMR, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(nuevoDistanciaMR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
            .addGroup(modificarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(modificarRutaLayout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addComponent(tituloMR, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 308, Short.MAX_VALUE)
                    .addGroup(modificarRutaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(confirmarMR)
                        .addComponent(cancelarMR))
                    .addGap(18, 18, 18)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Buscar Ruta");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Opciones De Gestion");

        botonAgregarBus.setText("Agregar Nueva Ruta");
        botonAgregarBus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonAgregarBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarBusActionPerformed(evt);
            }
        });

        botonModificarBus.setText("Modificar Ruta");
        botonModificarBus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonModificarBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarBusActionPerformed(evt);
            }
        });

        jLabel1.setText("Ruta Buscada");

        botonEliminarBus.setText("Eliminar Ruta");
        botonEliminarBus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonEliminarBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarBusActionPerformed(evt);
            }
        });

        textFieldRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldRutaActionPerformed(evt);
            }
        });

        botonCerrar.setText("Cerrar");
        botonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarActionPerformed(evt);
            }
        });

        jLabel2.setText("Ingese el ID de la Ruta :");

        tablaRuta.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tablaRuta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Origen", "Destino", "Distancia", "Cantidad De Buses"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaRuta.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaRuta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(34, 34, 34)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(textFieldRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(botonModificarBus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(botonAgregarBus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(118, 118, 118)
                                        .addComponent(botonEliminarBus)))
                                .addGap(0, 112, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(botonCerrar)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(textFieldRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAgregarBus)
                    .addComponent(botonEliminarBus))
                .addGap(39, 39, 39)
                .addComponent(botonModificarBus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addComponent(botonCerrar)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAgregarBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarBusActionPerformed
        AgregarRuta.setSize(600, 400);
        AgregarRuta.setLocationRelativeTo(null);
        AgregarRuta.setVisible(true);
       
    }//GEN-LAST:event_botonAgregarBusActionPerformed

    private void botonModificarBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarBusActionPerformed
        modificarRuta.setSize(600, 400);
        modificarRuta.setLocationRelativeTo(null);
        modificarRuta.setVisible(true);
    }//GEN-LAST:event_botonModificarBusActionPerformed

    private void botonEliminarBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarBusActionPerformed
        eliminarRuta.setSize(600, 400);
        eliminarRuta.setLocationRelativeTo(null);
        eliminarRuta.setVisible(true);
    }//GEN-LAST:event_botonEliminarBusActionPerformed

    private void textFieldRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldRutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldRutaActionPerformed

    private void botonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonCerrarActionPerformed

    private void textodistanciaNuevaRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textodistanciaNuevaRutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textodistanciaNuevaRutaActionPerformed

    private void confirmarNuevaRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarNuevaRutaActionPerformed
        
       try 
       {
    
            String origenText = textoOrigenNuevaRuta.getText();
            String destinoText = textDestinoNuevaRuta.getText();
            String distanciaText = textodistanciaNuevaRuta.getText();

            // Verifica que los demás campos no estén vacíos
            if (origenText.trim().isEmpty()) {
                throw new CampoVacioException("El campo 'origen' no puede estar vacío.");
            }
            if (destinoText.trim().isEmpty()) {
                throw new CampoVacioException("El campo 'destino' no puede estar vacío.");
            }
            if (distanciaText.trim().isEmpty()) {
                throw new CampoVacioException("El campo 'distancia' no puede estar vacío.");
            }

            // Convierte la distancia a double
            double distancia = Double.parseDouble(distanciaText);

            // Llama al método para agregar la ruta
            agregarRutaBD(origenText, destinoText, distancia);

            // Obtén la última ID de ruta después de agregar
            int idRuta = obtenerUltimaIdRuta();
            if (idRuta != -1) 
            {
                empresa.agregarRutaEmpresa(idRuta, destinoText, distancia, origenText); 
            }

            // Muestra un mensaje de éxito
            JOptionPane.showMessageDialog(null, "Ruta agregada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);

            // Limpia los campos de texto después de agregar
            textoOrigenNuevaRuta.setText("");
            textDestinoNuevaRuta.setText("");
            textodistanciaNuevaRuta.setText("");

        } 
       catch (CampoVacioException e) 
        {
            // Muestra un mensaje de error si hay un campo vacío
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error al agregar ruta", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException e) 
        {
            // Maneja el caso en que la distancia no sea un número válido
            JOptionPane.showMessageDialog(null, "La distancia debe ser un número válido.", "Error de formato", JOptionPane.ERROR_MESSAGE);
        }                       
    }//GEN-LAST:event_confirmarNuevaRutaActionPerformed

    private int obtenerUltimaIdRuta() 
    {
        int ultimaId = -1; 
        Connection cone = empresa.getConexionBd();
        String query = "SELECT last_insert_rowid()";

        try (PreparedStatement pstmt = cone.prepareStatement(query);
             ResultSet rs = pstmt.executeQuery()) {

            if (rs.next()) {
                ultimaId = rs.getInt(1); 
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al obtener la última ID: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        return ultimaId;
    }
    private void agregarRutaBD(String origen, String destino, double distancia) 
    {
        Connection cone = empresa.getConexionBd();
    
        String query = "INSERT INTO Rutas (destino, distancia, origen) VALUES (?, ?, ?)";

        try (PreparedStatement pstmt = cone.prepareStatement(query)) 
        {
            // El ID se auto-incrementa, así que no lo incluimos en la inserción
            pstmt.setString(1, destino);
            pstmt.setDouble(2, distancia);
            pstmt.setString(3, origen);

            // Ejecutar la inserción
            int rowsAffected = pstmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Ruta agregada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            } else 
            {
                JOptionPane.showMessageDialog(null, "No se pudo agregar la ruta.", "Error", JOptionPane.WARNING_MESSAGE);
            }
        } 
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(null, "Error al agregar la ruta: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    

    private void textDestinoNuevaRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDestinoNuevaRutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textDestinoNuevaRutaActionPerformed

    private void botonCancelarNuevaRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarNuevaRutaActionPerformed
        AgregarRuta.dispose();
    }//GEN-LAST:event_botonCancelarNuevaRutaActionPerformed

    
    private void actualizarTablaRuta() 
    {
        
            // Obtener el ID de la ruta desde el TextField
            String idRutaTexto = textFieldRuta.getText(); // Suponiendo que este es tu TextField
             if (idRutaTexto.isEmpty())
             {
                return; // Salir del método
            }
            int idRuta;
            try 
             {
                idRuta = Integer.parseInt(idRutaTexto);
                
             } 
             catch (NumberFormatException e) 
                {
                    JOptionPane.showMessageDialog(this, "El ID de la ruta debe ser un número entero.");
                 
                    return;// Asegúrate de manejar excepciones aquí
                } 

            Ruta ruta = null;
             try
             {
                 ruta = empresa.obtenerRuta(idRuta);
             }
            catch(RutaNoEncontradaException e)
             {
               JOptionPane.showMessageDialog(null, e.getMessage());
               return;
             } 
        // Limpiar la tabla
        DefaultTableModel modelo = (DefaultTableModel) tablaRuta.getModel();
        modelo.setRowCount(0); // Elimina todas las filas actuales de la tabla
        double distancia = ruta.getDistancia();
        DecimalFormat df = new DecimalFormat("#.###");
        String distanciaFormat = df.format(distancia);
        List<Bus> b = ruta.getBuses();
        int catidadBuses = b.size();
         
            Object[] rowData = {
                ruta.getId(),
                ruta.getOrigen(),
                ruta.getDestino(),
                distanciaFormat,
                catidadBuses
            };
            modelo.addRow(rowData); // Añadir la fila al modelo de la tabla
    }
       
    
    private void confirmarEliminarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarEliminarRutaActionPerformed
        String idRuta = textoFieldEliminarRuta.getText();

        if (idRuta.isEmpty()) 
        {
            try 
            {
                throw new CampoVacioException("El campo 'origen' no puede estar vacío.");
            } catch (CampoVacioException ex) 
            {
                Logger.getLogger(VentanaRuta.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }

         else 
        {
            // Mostrar un diálogo de confirmación antes de eliminar la ruta
            int confirmacion;
            confirmacion = JOptionPane.showConfirmDialog(this,
                    "¿Está seguro de que desea eliminar la ruta con id : " + idRuta + "?",
                    "Confirmar Eliminación",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);

            // Si el usuario confirma, procede con la eliminación
            if (confirmacion == JOptionPane.YES_OPTION) 
            {
                try 
                {
                    int idRutaBuscado = Integer.parseInt(idRuta);


                                            // Llama al método para eliminar la ruta de la base de datos
                        if (eliminarRutaEmpresa(idRutaBuscado)) 
                        {
                            empresa.eliminarRutaEmpresa(idRutaBuscado);
                            
                            JOptionPane.showMessageDialog(this, "Ruta eliminada correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                        } else 
                        {
                            
                            JOptionPane.showMessageDialog(this, "No se pudo eliminar la ruta de la base de datos.", "Error", JOptionPane.ERROR_MESSAGE);
                        }
                     
                    textoFieldEliminarRuta.setText("");
                } 
                catch (NumberFormatException e) 
                {
                    JOptionPane.showMessageDialog(this, "El ID debe ser un número válido.", "Error de formato", JOptionPane.ERROR_MESSAGE);
                }  
                catch (HeadlessException e) 
                {
                    JOptionPane.showMessageDialog(this, "Ocurrió un error al intentar eliminar la Ruta.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else 
            {
                JOptionPane.showMessageDialog(this, "Operación cancelada.", "Cancelación", JOptionPane.INFORMATION_MESSAGE);
            }
            }

// Cerrar el diálogo después de la operación
        eliminarRuta.dispose();
    }//GEN-LAST:event_confirmarEliminarRutaActionPerformed
    private boolean eliminarRutaEmpresa(int idRuta) 
    {
        return eliminarRutaBD(idRuta);
    }


    private boolean eliminarRutaBD(int idRuta) 
    {
        Connection cone = empresa.getConexionBd();
        String query = "DELETE FROM Rutas WHERE idRutas = ?";

        try (PreparedStatement pstmt = cone.prepareStatement(query))
        {
            pstmt.setInt(1, idRuta);
            pstmt.executeUpdate();

             // Ruta eliminada exitosamente
            // No se eliminó ninguna ruta
        } catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(null, "Error al eliminar la ruta: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return false; // Retorna falso en caso de error
        }
        return true;
    }
    private void cancelarEliminarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarEliminarRutaActionPerformed
        eliminarRuta.dispose();
    }//GEN-LAST:event_cancelarEliminarRutaActionPerformed

    private void fieldrutaMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldrutaMRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldrutaMRActionPerformed

    private void nuevoOrigenMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoOrigenMRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevoOrigenMRActionPerformed

    private void cancelarMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarMRActionPerformed
        modificarRuta.dispose();
    }//GEN-LAST:event_cancelarMRActionPerformed

    private void nuevoDistanciaMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoDistanciaMRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevoDistanciaMRActionPerformed

    private void confirmarMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarMRActionPerformed
           try 
           {
                String idRutaText = fieldrutaMR.getText();
                String nuevoOrigen = nuevoOrigenMR.getText();
                String nuevoDestino = nuevoDestinoMR.getText();
                String nuevaDistanciaText = nuevoDistanciaMR.getText();

                // Verificación de campos vacíos
                if (idRutaText.trim().isEmpty()) {
                    throw new CampoVacioException("El campo 'ID de la ruta' no puede estar vacío.");
                }
                if (nuevoOrigen.trim().isEmpty()) {
                    throw new CampoVacioException("El campo 'Nuevo Origen' no puede estar vacío.");
                }
                if (nuevoDestino.trim().isEmpty()) {
                    throw new CampoVacioException("El campo 'Nuevo Destino' no puede estar vacío.");
                }
                if (nuevaDistanciaText.trim().isEmpty()) {
                    throw new CampoVacioException("El campo 'Nueva Distancia' no puede estar vacío.");
                }

                // Convertir el ID de la ruta y la distancia a sus respectivos tipos
                int idRuta = Integer.parseInt(idRutaText);
                double nuevaDistancia = Double.parseDouble(nuevaDistanciaText);

                // Actualizar la ruta en la base de datos
                boolean exitoBD = modificarRutaBD(idRuta, nuevoOrigen, nuevoDestino, nuevaDistancia);

                if (exitoBD) {
                    // Actualizar la ruta en la empresa
                    empresa.modificarRutaEmpresa(idRuta, nuevoDestino, nuevaDistancia, nuevoOrigen);

                    // Mensaje de éxito
                    JOptionPane.showMessageDialog(null, "Ruta modificada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);

                    // Limpiar los campos
                    fieldrutaMR.setText("");
                    nuevoOrigenMR.setText("");
                    nuevoDestinoMR.setText("");
                    nuevoDistanciaMR.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "No se pudo modificar la ruta en la base de datos.", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } 
            catch (CampoVacioException e) 
            {
                // Manejo de excepción de campo vacío
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } 
           catch (NumberFormatException e) 
            {
                // Manejo de excepción de formato incorrecto para números
                JOptionPane.showMessageDialog(null, "El ID de la ruta y la distancia deben ser valores numéricos válidos.", "Error de formato", JOptionPane.ERROR_MESSAGE);
            }
           
           modificarRuta.dispose();
    }//GEN-LAST:event_confirmarMRActionPerformed

    
    private boolean modificarRutaBD(int idRuta, String nuevoOrigen, String nuevoDestino, double nuevaDistancia) 
    {
    String query = "UPDATE Rutas SET origen = ?, destino = ?, distancia = ? WHERE idRutas = ?";
    
    try  
    {
        
            Connection conn = empresa.getConexionBd(); 
         PreparedStatement pstmt = conn.prepareStatement(query);
        
        pstmt.setString(1, nuevoOrigen);
        pstmt.setString(2, nuevoDestino);
        pstmt.setDouble(3, nuevaDistancia);
        pstmt.setInt(4, idRuta);

        int rowsAffected = pstmt.executeUpdate();
        
        return rowsAffected > 0; // Devuelve true si se actualizó correctamente
    } 
    catch (SQLException e) 
    {
        JOptionPane.showMessageDialog(null, "Error al modificar la ruta en la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
}

    
    private void nuevoDestinoMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoDestinoMRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevoDestinoMRActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog AgregarRuta;
    private javax.swing.JButton botonAgregarBus;
    private javax.swing.JButton botonCancelarNuevaRuta;
    private javax.swing.JButton botonCerrar;
    private javax.swing.JButton botonEliminarBus;
    private javax.swing.JButton botonModificarBus;
    private javax.swing.JButton cancelarEliminarRuta;
    private javax.swing.JButton cancelarMR;
    private javax.swing.JButton confirmarEliminarRuta;
    private javax.swing.JButton confirmarMR;
    private javax.swing.JButton confirmarNuevaRuta;
    private javax.swing.JDialog eliminarRuta;
    private javax.swing.JTextField fieldrutaMR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JOptionPane jOptionPane2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JDialog modificarRuta;
    private javax.swing.JTextField nuevoDestinoMR;
    private javax.swing.JTextField nuevoDistanciaMR;
    private javax.swing.JTextField nuevoOrigenMR;
    private javax.swing.JTable tablaRuta;
    private javax.swing.JTextField textDestinoNuevaRuta;
    private javax.swing.JTextField textFieldRuta;
    private javax.swing.JTextField textoFieldEliminarRuta;
    private javax.swing.JTextField textoOrigenNuevaRuta;
    private javax.swing.JTextField textodistanciaNuevaRuta;
    private javax.swing.JLabel tituloMR;
    // End of variables declaration//GEN-END:variables
}
