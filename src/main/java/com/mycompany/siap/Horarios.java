package com.mycompany.siap;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;

/**
 * Clase para la gestión de horarios en la aplicación SIAP
 */
public class Horarios extends javax.swing.JFrame {

    private JDesktopPane desktopPane;
    Empresa empresa;

    /**
     * Crea una nueva forma Horarios
     */
    public Horarios(Empresa emp) {
        this.empresa = emp;
        desktopPane = new JDesktopPane();
        this.setContentPane(desktopPane);
        initComponents();
        cargarDatos();
    }

    /* Metodo privado para cargar los datos de los horarios desde la base de datos */
    private void cargarDatos() {
        DefaultTableModel modelo = (DefaultTableModel) tblDatos.getModel();
        modelo.setRowCount(0);  // Limpiar el modelo de la tabla

        // Conectar a la base de datos SQLite
        Connection conn = null; // Declarar la conexión fuera del bloque try
        try {
            conn = empresa.getConexionBd(); // Obtener la conexión
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT horario, fecha, ruta_id, idHorario FROM Horarios");

            // Recorrer los resultados y agregarlos a la tabla
            while (rs.next()) {
                Object[] fila = new Object[4];  // Tres columnas: Horario, Fecha, Bus
                fila[0] = rs.getString("horario");
                fila[1] = rs.getString("fecha");
                fila[2] = rs.getInt("ruta_id");
                fila[3] = rs.getInt("idHorario");
                modelo.addRow(fila);
            }
        } catch (Exception e) {
            e.printStackTrace();  // Imprimir error en consola para rastrear excepciones
        } finally {
            // Asegurarse de cerrar la conexión aquí si se hubiera abierto fuera del try-with-resources
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        botonAgregarHorario = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        botonnCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null,null},
                        {null, null, null,null},
                        {null, null, null,null},
                        {null, null, null,null}
                },
                new String [] {
                        "Horario", "Fecha", "IdRuta" ,"IDHorario"
                }
        ));
        jScrollPane2.setViewportView(tblDatos);

        jLabel1.setText("Gestor de Horarios");

        botonAgregarHorario.setText("Agregar");
        botonAgregarHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarHorarioActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        botonnCerrar.setText("Cerrar");
        botonnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(botonAgregarHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(151, 151, 151))
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE))
                                .addContainerGap(320, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botonnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(botonAgregarHorario)
                                        .addComponent(jButton2))
                                .addGap(154, 154, 154)
                                .addComponent(botonnCerrar)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Acción del botón "Agregar" que abre la ventana para agregar horarios
    private void botonAgregarHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarHorarioActionPerformed
        AgregarHorario ventAgregarHorario = new AgregarHorario(empresa);
        ventAgregarHorario.setVisible(true);
        cargarDatos(); // Recargar datos después de la acción
    }//GEN-LAST:event_botonAgregarHorarioActionPerformed

    // Acción del botón "Cerrar" que cierra la ventana actual
    private void botonnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonnCerrarActionPerformed

    // Acción del botón "Eliminar" que abre la ventana para eliminar horarios
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        VentEliminarHora ventEliminarHora = new VentEliminarHora(empresa);
        ventEliminarHora.setVisible(true);
        cargarDatos(); // Recargar datos después de la acción
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarHorario;
    private javax.swing.JButton botonnCerrar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDatos;
    // End of variables declaration//GEN-END:variables
}