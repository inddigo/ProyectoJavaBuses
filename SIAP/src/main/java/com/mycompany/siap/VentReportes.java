/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.siap;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author joshu
 */
public class VentReportes extends javax.swing.JFrame {
    Empresa emp;
    /**
     * Creates new form VentReportes
     */

    public VentReportes(Empresa emp) {
        this.emp = emp;
        initComponents();
        loadTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        texto1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        rutaIdField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultadoArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bus", "BusId", "Costo Mantencion", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("jButton2");

        jButton3.setText("jButton3");

        jButton4.setText("jButton4");

        rutaIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rutaIdFieldActionPerformed(evt);
            }
        });

        resultadoArea.setColumns(20);
        resultadoArea.setRows(5);
        jScrollPane2.setViewportView(resultadoArea);

        jLabel1.setText("Ingrese IdRuta");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(texto1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(227, 227, 227))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(107, 107, 107)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rutaIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(202, 202, 202))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(texto1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rutaIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(114, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rutaIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rutaIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rutaIdFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    
    
    private void loadTableData() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Limpiar filas actuales

        String query = "SELECT patente, idBus, costomantencion FROM Buses"; // Ajustar nombre de tabla y columnas

        try (Connection conn = emp.getConexionBd();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            while (rs.next()) {
                // Agregar filas a la tabla según el número de columnas que tengas
                Object[] row = {
                    rs.getString("patente"),
                    rs.getInt("BusId"),
                    rs.getDouble("CostoMantencion")
                };
                model.addRow(row);
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al cargar los datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void calcularViabilidad() {
        int rutaId;
        try {
            rutaId = Integer.parseInt(rutaIdField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese un ID de ruta válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        double precioTicket = 6000; // Precio del ticket
        double costoMantencionPorKm = obtenerCostoMantencionPorKm(rutaId);
        double totalAsientosOcupados = obtenerAsientosOcupados(rutaId);
        double ingresoEstimado = totalAsientosOcupados * precioTicket;

        // Cálculo de la distancia de la ruta
        double distanciaRuta = obtenerDistanciaRuta(rutaId);
        double costoTotalMantencion = costoMantencionPorKm * distanciaRuta;

        resultadoArea.setText("Costo Mantenimiento por Km: " + costoMantencionPorKm +
                               "\nIngreso Estimado: " + ingresoEstimado +
                               "\nCosto Total de Mantenimiento: " + costoTotalMantencion);

        if (ingresoEstimado < costoTotalMantencion) {
            JOptionPane.showMessageDialog(this, "El viaje no es viable. Se recomienda juntar con el siguiente horario.");
        } else {
            JOptionPane.showMessageDialog(this, "El viaje es viable.");
        }
    }

    private double obtenerCostoMantencionPorKm(int rutaId) {
        double costoMantencionPorKm = 0.0;
        String sql = "SELECT AVG(costo_mantencion) / AVG(distancia) FROM Buses JOIN Rutas ON Buses.ruta_id = Rutas.idRutas WHERE Rutas.idRutas = ?";

        try (Connection conn = emp.getConexionBd(); // Asegúrate de usar el método correcto para obtener la conexión
             PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setInt(1, rutaId);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                costoMantencionPorKm = rs.getDouble(1);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al obtener el costo de mantenimiento por km: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        return costoMantencionPorKm;
    }

    private double obtenerDistanciaRuta(int rutaId) {
        double distancia = 0.0;
        String sql = "SELECT distancia FROM Rutas WHERE idRutas = ?";

        try (Connection conn = emp.getConexionBd(); // Asegúrate de usar el método correcto para obtener la conexión
             PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setInt(1, rutaId);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                distancia = rs.getDouble("distancia");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al obtener la distancia de la ruta: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        return distancia;
    }

    // Implementa este método para obtener la cantidad de asientos ocupados en la ruta
    private double obtenerAsientosOcupados(int rutaId) {
        double totalOcupados = 0;
        String sql = "SELECT SUM(pasajeros_actuales) FROM Buses WHERE ruta_id = ?";

        try (Connection conn = emp.getConexionBd(); // Asegúrate de usar el método correcto para obtener la conexión
             PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setInt(1, rutaId);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                totalOcupados = rs.getDouble(1);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al obtener la cantidad de asientos ocupados: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        return totalOcupados;
    }
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea resultadoArea;
    private javax.swing.JTextField rutaIdField;
    private javax.swing.JLabel texto1;
    // End of variables declaration//GEN-END:variables
}
