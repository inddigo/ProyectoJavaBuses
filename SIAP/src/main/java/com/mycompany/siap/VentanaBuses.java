package com.mycompany.siap;


import java.awt.HeadlessException;
import javax.swing.*;
import java.util.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.text.DecimalFormat;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;




public class VentanaBuses extends javax.swing.JFrame {

    private Empresa empresa;
   
    
    public VentanaBuses(Empresa emp) 
    {
        this.empresa = emp;
       
        initComponents();
         
       
        
        
        rutaTextField.getDocument().addDocumentListener(new DocumentListener() 
        {
            @Override
            public void insertUpdate(DocumentEvent e) {
                buscarBusesPorRuta(); // Llama al método al insertar texto
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
                buscarBusesPorRuta(); // Llama al método al eliminar texto
            }

            @Override
            public void changedUpdate(DocumentEvent e) 
            {
               buscarBusesPorRuta();  
            }
        });
        setLocationRelativeTo(null);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogoAgregarBus = new javax.swing.JDialog();
        textoNuevoBus = new javax.swing.JTextField();
        textoRutaNuevoBus = new javax.swing.JTextField();
        textoCostoMantencionBus = new javax.swing.JTextField();
        tituloAgregarBus = new javax.swing.JLabel();
        cancelarAgregarBus = new javax.swing.JButton();
        confirmarNuevoBus = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jOptionPane1 = new javax.swing.JOptionPane();
        dialogoEliminarBus = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        textoFieldEliminarBus = new javax.swing.JTextField();
        confirmarEliminar = new javax.swing.JButton();
        cancelarEliminar = new javax.swing.JButton();
        jOptionPane2 = new javax.swing.JOptionPane();
        jOptionPane = new javax.swing.JOptionPane();
        dialogoModificarBus = new javax.swing.JDialog();
        jLabel9 = new javax.swing.JLabel();
        fieldPatenteMB = new javax.swing.JTextField();
        nuevaCapacidad = new javax.swing.JTextField();
        nuevoCostoMb = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        confirmarMB = new javax.swing.JButton();
        cancelarMB = new javax.swing.JButton();
        optionPaneMB = new javax.swing.JOptionPane();
        jLabel1 = new javax.swing.JLabel();
        rutaTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboBoxBuses = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaBus = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        botonAgregarBus = new javax.swing.JButton();
        botonModificarBus = new javax.swing.JButton();
        botonEliminarBus = new javax.swing.JButton();
        botonCerrar = new javax.swing.JButton();

        dialogoAgregarBus.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dialogoAgregarBus.setName("Menu Agregar Bus"); // NOI18N
        dialogoAgregarBus.setUndecorated(true);

        textoNuevoBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoNuevoBusActionPerformed(evt);
            }
        });

        textoRutaNuevoBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoRutaNuevoBusActionPerformed(evt);
            }
        });

        textoCostoMantencionBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoCostoMantencionBusActionPerformed(evt);
            }
        });

        tituloAgregarBus.setFont(new java.awt.Font("sansserif", 0, 30)); // NOI18N
        tituloAgregarBus.setText("Agregar los datos del nuevo bus");

        cancelarAgregarBus.setText("Cancelar");
        cancelarAgregarBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarAgregarBusActionPerformed(evt);
            }
        });

        confirmarNuevoBus.setText("Confirmar");
        confirmarNuevoBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarNuevoBusActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel6.setText("Ingresar la ruta del bus:");

        jLabel7.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel7.setText("Ingresar el costo de mantencion:");

        jLabel8.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel8.setText("Ingresar la patente del bus:");

        javax.swing.GroupLayout dialogoAgregarBusLayout = new javax.swing.GroupLayout(dialogoAgregarBus.getContentPane());
        dialogoAgregarBus.getContentPane().setLayout(dialogoAgregarBusLayout);
        dialogoAgregarBusLayout.setHorizontalGroup(
            dialogoAgregarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogoAgregarBusLayout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addComponent(tituloAgregarBus)
                .addGap(63, 63, 63))
            .addGroup(dialogoAgregarBusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogoAgregarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogoAgregarBusLayout.createSequentialGroup()
                        .addComponent(cancelarAgregarBus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(confirmarNuevoBus))
                    .addGroup(dialogoAgregarBusLayout.createSequentialGroup()
                        .addGroup(dialogoAgregarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dialogoAgregarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(dialogoAgregarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textoNuevoBus, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                .addComponent(textoRutaNuevoBus))
                            .addComponent(textoCostoMantencionBus, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        dialogoAgregarBusLayout.setVerticalGroup(
            dialogoAgregarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogoAgregarBusLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(tituloAgregarBus)
                .addGap(34, 34, 34)
                .addGroup(dialogoAgregarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(textoNuevoBus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(dialogoAgregarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textoRutaNuevoBus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(dialogoAgregarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(textoCostoMantencionBus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(dialogoAgregarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarAgregarBus)
                    .addComponent(confirmarNuevoBus))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        dialogoEliminarBus.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dialogoEliminarBus.setName("Eliminar Bus"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel3.setText("Ingrese la patente del bus a elminiar");

        confirmarEliminar.setText("Confirmar");
        confirmarEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarEliminarActionPerformed(evt);
            }
        });

        cancelarEliminar.setText("Cancelar");
        cancelarEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogoEliminarBusLayout = new javax.swing.GroupLayout(dialogoEliminarBus.getContentPane());
        dialogoEliminarBus.getContentPane().setLayout(dialogoEliminarBusLayout);
        dialogoEliminarBusLayout.setHorizontalGroup(
            dialogoEliminarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogoEliminarBusLayout.createSequentialGroup()
                .addGroup(dialogoEliminarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(dialogoEliminarBusLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(cancelarEliminar)
                        .addGap(316, 316, 316)
                        .addComponent(confirmarEliminar)
                        .addGap(40, 40, 40))
                    .addGroup(dialogoEliminarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(dialogoEliminarBusLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(dialogoEliminarBusLayout.createSequentialGroup()
                            .addGap(222, 222, 222)
                            .addComponent(textoFieldEliminarBus, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        dialogoEliminarBusLayout.setVerticalGroup(
            dialogoEliminarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogoEliminarBusLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addComponent(textoFieldEliminarBus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(dialogoEliminarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmarEliminar)
                    .addComponent(cancelarEliminar))
                .addGap(23, 23, 23))
        );

        dialogoModificarBus.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dialogoModificarBus.setName("Menu Modificar Bus"); // NOI18N

        fieldPatenteMB.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingrese la patente del bus a modificar(EN MAYUSCULAS)"));
        fieldPatenteMB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPatenteMBActionPerformed(evt);
            }
        });

        nuevaCapacidad.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingrese la nueva capacidad"));
        nuevaCapacidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevaCapacidadActionPerformed(evt);
            }
        });

        nuevoCostoMb.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingrese El Nuevo Costo De Mantencion"));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel10.setText("Menu modificar bus");

        confirmarMB.setText("Confirmar");
        confirmarMB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        confirmarMB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmarMBActionPerformed(evt);
            }
        });

        cancelarMB.setText("Cancelar");
        cancelarMB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelarMB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarMBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogoModificarBusLayout = new javax.swing.GroupLayout(dialogoModificarBus.getContentPane());
        dialogoModificarBus.getContentPane().setLayout(dialogoModificarBusLayout);
        dialogoModificarBusLayout.setHorizontalGroup(
            dialogoModificarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogoModificarBusLayout.createSequentialGroup()
                .addGroup(dialogoModificarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogoModificarBusLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dialogoModificarBusLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(dialogoModificarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancelarMB)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nuevaCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nuevoCostoMb, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldPatenteMB, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(215, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogoModificarBusLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(confirmarMB)
                .addGap(14, 14, 14))
        );
        dialogoModificarBusLayout.setVerticalGroup(
            dialogoModificarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogoModificarBusLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldPatenteMB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(nuevaCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(nuevoCostoMb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(dialogoModificarBusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmarMB)
                    .addComponent(cancelarMB))
                .addGap(18, 18, 18))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Bus Buscado:");

        rutaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rutaTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Ingese el ID de la Ruta :");

        comboBoxBuses.setBorder(javax.swing.BorderFactory.createTitledBorder("Seleccione El Bus A Buscar"));
        comboBoxBuses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxBusesActionPerformed(evt);
            }
        });

        tablaBus.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tablaBus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Patente", "Capacidad", "Costo Mantencion", "Pasajeros Actuales"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaBus.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaBus);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Buscar Bus:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Opciones De Gestion");

        botonAgregarBus.setText("Agregar Nuevo  Bus");
        botonAgregarBus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonAgregarBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarBusActionPerformed(evt);
            }
        });

        botonModificarBus.setText("Modificar Bus");
        botonModificarBus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonModificarBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarBusActionPerformed(evt);
            }
        });

        botonEliminarBus.setText("Eliminar Bus");
        botonEliminarBus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonEliminarBus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarBusActionPerformed(evt);
            }
        });

        botonCerrar.setText("Cerrar");
        botonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(botonModificarBus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(botonAgregarBus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(118, 118, 118)
                                        .addComponent(botonEliminarBus))
                                    .addComponent(comboBoxBuses, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 74, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(botonCerrar)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rutaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rutaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(comboBoxBuses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAgregarBus)
                    .addComponent(botonEliminarBus))
                .addGap(39, 39, 39)
                .addComponent(botonModificarBus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(botonCerrar)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rutaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rutaTextFieldActionPerformed
       buscarBusesPorRuta();
    }//GEN-LAST:event_rutaTextFieldActionPerformed

    private void comboBoxBusesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxBusesActionPerformed
                                              
           
        String patenteSeleccionada = (String) comboBoxBuses.getSelectedItem();

        if (patenteSeleccionada != null) {
            // Limpiar la tabla antes de actualizar
            DefaultTableModel modelo = (DefaultTableModel) tablaBus.getModel();
            modelo.setRowCount(0); // Limpiar filas existentes

            // Obtener la lista de buses
            List<Bus> listaBuses = empresa.getListaBuses(); 

            // Buscar el bus correspondiente a la patente seleccionada
            for (Bus bus : listaBuses) 
            {
                if (bus.getPatente().equals(patenteSeleccionada)) 
                {
                    double costoMantencion = bus.getCostoMantencion();
                    DecimalFormat df = new DecimalFormat("#.###");
                     String costoMantencionFormat = df.format(costoMantencion);
                    // Crear un array con los datos del bus
                    Object[] rowData = {bus.getPatente(), bus.getCapacidad(), costoMantencionFormat,bus.getPasajerosActuales() };
                    // Agregar la fila al modelo de la tabla
                    modelo.addRow(rowData);
                }
            }
        }
    }//GEN-LAST:event_comboBoxBusesActionPerformed
  

    private void  buscarBusesPorRuta() 
    {
            // Obtener el ID de la ruta desde el TextField
            String idRutaTexto = rutaTextField.getText(); // Suponiendo que este es tu TextField
             if (idRutaTexto.isEmpty())
             {
                comboBoxBuses.removeAllItems(); // Limpiar el ComboBox
                return; // Salir del método
            }
            int idRuta;
            try 
             {
                comboBoxBuses.removeAllItems();
                idRuta = Integer.parseInt(idRutaTexto);
                
             } 
             catch (NumberFormatException e) 
                {
                    JOptionPane.showMessageDialog(this, "El ID de la ruta debe ser un número entero.");
                 
                    return;// Asegúrate de manejar excepciones aquí
                } 
            // Obtener la ruta de la empresa
            Ruta ruta = null;
             try
             {
                 ruta = empresa.obtenerRuta(idRuta);
             }
            catch(RutaNoEncontradaException e)
             {
               JOptionPane.showMessageDialog(null, e.getMessage());
               return;
             } 
                               

            // Limpiar el ComboBox
            

            // Verificar si la ruta existe
            if (ruta != null) 
            {
                comboBoxBuses.removeAllItems();
                // Obtener la lista de buses de la ruta
              
                List<Bus> buses = ruta.getBuses();
               

                // Llenar el ComboBox con los buses
                for (Bus bus : buses) {
                    comboBoxBuses.addItem(bus.getPatente());
                }
            } 
           
    }

    
    private void botonModificarBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarBusActionPerformed
        
        dialogoModificarBus.setSize(600,400);
        dialogoModificarBus.setVisible(true);
        dialogoModificarBus.setLocationRelativeTo(null);
    }//GEN-LAST:event_botonModificarBusActionPerformed

    private void botonAgregarBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarBusActionPerformed
        dialogoAgregarBus.setSize(600,400);
        dialogoAgregarBus.setVisible(true);
        dialogoAgregarBus.setLocationRelativeTo(null);
        
        
    }//GEN-LAST:event_botonAgregarBusActionPerformed

    private void botonEliminarBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarBusActionPerformed
        dialogoEliminarBus.setSize(600,400);
        dialogoEliminarBus.setVisible(true);
        dialogoEliminarBus.setLocationRelativeTo(null);
    }//GEN-LAST:event_botonEliminarBusActionPerformed

    private void botonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonCerrarActionPerformed

    private void cancelarAgregarBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarAgregarBusActionPerformed
        dialogoAgregarBus.dispose();
    }//GEN-LAST:event_cancelarAgregarBusActionPerformed

    private void textoCostoMantencionBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoCostoMantencionBusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoCostoMantencionBusActionPerformed

    private void textoRutaNuevoBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoRutaNuevoBusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoRutaNuevoBusActionPerformed

    private void textoNuevoBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoNuevoBusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoNuevoBusActionPerformed

    private void confirmarNuevoBusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarNuevoBusActionPerformed
        Connection cone = empresa.getConexionBd();
        try 
         {
            String patenteNueva = textoNuevoBus.getText();
            patenteNueva.toUpperCase();
            String rutaNuevo = textoRutaNuevoBus.getText(); // ID de la ruta
            String costoMantencionText = textoCostoMantencionBus.getText();

            // Verifica que los campos no estén vacíos
            if (patenteNueva.trim().isEmpty()) 
            {
                throw new CampoVacioException("El campo 'patente' no puede estar vacío.");
            }
            if (rutaNuevo.trim().isEmpty()) 
            {
                throw new CampoVacioException("El campo 'ruta' no puede estar vacío.");
            }
            if (costoMantencionText.trim().isEmpty()) 
            {
                throw new CampoVacioException("El campo 'costo de mantención' no puede estar vacío.");
            }

            // Convierte el costo de mantención a double
            double costoMantencion = Double.parseDouble(costoMantencionText);

            // Obtiene el ID de la ruta
            int idRuta = Integer.parseInt(rutaNuevo); // Asegúrate de que este campo sea un número

            // Verifica que la ruta existe en la base de datos
            if (!rutaExists(idRuta,cone)) 
            {
                JOptionPane.showMessageDialog(null, "La ruta con ID " + idRuta + " no existe.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Salir del método si la ruta no existe
            }

            // Verifica que la patente no exista ya en la base de datos
            if (patenteExists(patenteNueva,cone)) 
            {
                JOptionPane.showMessageDialog(null, "La patente '" + patenteNueva + "' ya está en uso.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Salir del método si la patente ya existe
            }

            // Crea un nuevo objeto Bus
            Bus nuevoBus = new Bus(patenteNueva, 44, costoMantencion);
            nuevoBus.setPasajerosActuales(0); // Inicializa a 0

            
            boolean exitoBD = agregarBusBD(nuevoBus, idRuta);

            if (exitoBD) 
            {
                // Si se agregó correctamente en la base de datos, agrega el bus a la lista de la empresa
                empresa.agregarBusEmpresa(nuevoBus, idRuta);

                // Muestra un mensaje de éxito
                JOptionPane.showMessageDialog(null, "Bus agregado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo agregar el bus a la base de datos. Verifique la información.", "Error", JOptionPane.ERROR_MESSAGE);
            }

            // Limpia los campos de texto después de agregar
            textoNuevoBus.setText("");
            textoRutaNuevoBus.setText("");
            textoCostoMantencionBus.setText("");

        } catch (CampoVacioException e) {
            // Muestra un mensaje de error si hay un campo vacío
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error al agregar bus", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException e) {
            // Maneja el caso en que el costo de mantención o el ID de la ruta no sean números válidos
            JOptionPane.showMessageDialog(null, "El costo de mantención y la ID de la ruta deben ser números válidos.", "Error de formato", JOptionPane.ERROR_MESSAGE);
        }
         catch (HeadlessException e) 
        {
            // Manejo de otras excepciones
            JOptionPane.showMessageDialog(null, "Ocurrió un error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        dialogoAgregarBus.dispose();
    }//GEN-LAST:event_confirmarNuevoBusActionPerformed

    private boolean agregarBusBD(Bus bus,int idRuta) 
    {
        Connection cone = empresa.getConexionBd();
        String query = "INSERT INTO Buses (patente, capacidad, pasajeros_actuales, costo_mantencion, ruta_id) VALUES (?, ?, ?, ?, ?)";

        try (PreparedStatement pstmt = cone.prepareStatement(query)) 
        {
            pstmt.setString(1, bus.getPatente());
            pstmt.setInt(2, bus.getCapacidad()); 
            pstmt.setInt(3, bus.getPasajerosActuales()); // Inicialmente, este valor puede ser 0
            pstmt.setDouble(4, bus.getCostoMantencion());
            pstmt.setInt(5, idRuta); // Asegúrate de que tu clase Bus tenga un método getRutaId

            int rowsAffected = pstmt.executeUpdate();
            return rowsAffected > 0; // Devuelve true si se insertó al menos una fila
        } 
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(null, "Error al agregar el bus a la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return false; // Retorna false en caso de error
        }
    }
    private boolean rutaExists(int idRuta,Connection conn) 
    {
        String query = "SELECT COUNT(*) FROM Rutas WHERE idRutas = ?";
        try
        {    
        
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setInt(1, idRuta);
            ResultSet rs = pstmt.executeQuery();
            return rs.next() && rs.getInt(1) > 0; // Retorna true si hay al menos una coincidencia
        } catch (SQLException e) 
        { 
            return false;
        }
    }   

    private boolean patenteExists(String patente,Connection conn) 
    {
        String query = "SELECT COUNT(*) FROM Buses WHERE patente = ?";
        try
           
        {
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, patente);
            ResultSet rs = pstmt.executeQuery();
            return rs.next() && rs.getInt(1) > 0; // Retorna true si hay al menos una coincidencia
        } 
        catch (SQLException e) 
        {
            return false;
        }
}
    
    private void confirmarEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarEliminarActionPerformed
        
        String patenteBus = textoFieldEliminarBus.getText().toUpperCase();


        if (patenteBus.isEmpty()) 
        {
            jOptionPane2.showMessageDialog(this, "Ingrese una patente válida", "Error", jOptionPane1.ERROR_MESSAGE);     
        } 
        else 
        {
            // Mostrar un diálogo de confirmación antes de eliminar el bus
            int confirmacion = jOptionPane.showConfirmDialog(this, 
                "¿Está seguro de que desea eliminar el bus con patente: " + patenteBus + "?", 
                "Confirmar Eliminación", 
                jOptionPane.YES_NO_OPTION, 
                jOptionPane.QUESTION_MESSAGE);

            // Si el usuario confirma, procede con la eliminación
            if (confirmacion == jOptionPane.YES_OPTION) 
            {
                try 
                {
                        Bus bus = empresa.obtenerBusEmpresa(patenteBus);
                         if (bus != null) 
                         { 
                            if(empresa.eliminarBusEmpresa(bus))
                            {
                               jOptionPane2.showMessageDialog(this, "Bus eliminado correctamente.", "Éxito", jOptionPane1.INFORMATION_MESSAGE); 
                     
                            }
                            
                         }
                         else  jOptionPane2.showMessageDialog(this, "No se encontró un bus con esa patente.", "Error", jOptionPane1.ERROR_MESSAGE);
                 
                    textoFieldEliminarBus.setText("");

                } 
                catch (Exception e) 
                {
                   
                    jOptionPane1.showMessageDialog(this, "Ocurrió un error al intentar eliminar el bus.", "Error", jOptionPane1.ERROR_MESSAGE);
                }
            } else {
                
                jOptionPane.showMessageDialog(this, "Operación cancelada.", "Cancelación", jOptionPane.INFORMATION_MESSAGE);
            }
            }

            // Cerrar el diálogo después de la operación
           dialogoEliminarBus.dispose();
    }//GEN-LAST:event_confirmarEliminarActionPerformed

    private void cancelarEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarEliminarActionPerformed
        dialogoEliminarBus.dispose();
    }//GEN-LAST:event_cancelarEliminarActionPerformed

    private void nuevaCapacidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevaCapacidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevaCapacidadActionPerformed

    private void fieldPatenteMBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPatenteMBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPatenteMBActionPerformed

    private void cancelarMBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarMBActionPerformed
        dialogoModificarBus.dispose();
    }//GEN-LAST:event_cancelarMBActionPerformed

    private void confirmarMBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmarMBActionPerformed
       try 
       {
                String patenteBus = fieldPatenteMB.getText().toUpperCase();
                String nuevaCapacidadText = nuevaCapacidad.getText();
                String nuevoCostoText = nuevoCostoMb.getText();

                // Verificación de campos vacíos
                if (patenteBus.trim().isEmpty()) 
                {
                    throw new CampoVacioException("El campo 'Patente del bus' no puede estar vacío.");
                }
                if (nuevaCapacidadText.trim().isEmpty()) 
                {
                    throw new CampoVacioException("El campo 'Nueva Capacidad' no puede estar vacío.");
                }
                if (nuevoCostoText.trim().isEmpty()) 
                {
                    throw new CampoVacioException("El campo 'Nuevo Costo de Mantención' no puede estar vacío.");
                }

                // Convertir los valores numéricos
                int capacidadNueva = Integer.parseInt(nuevaCapacidadText);
                double nuevoCosto = Double.parseDouble(nuevoCostoText);

                // Actualizar el bus en la base de datos
                boolean exitoBD = modificarBusBD(patenteBus, capacidadNueva, nuevoCosto);

                if (exitoBD) {
                    // Actualizar el bus en la empresa
                    empresa.modificarBus(patenteBus, capacidadNueva, nuevoCosto);

                    // Mensaje de éxito
                    JOptionPane.showMessageDialog(null, "Bus modificado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);

                    // Limpiar los campos
                    fieldPatenteMB.setText("");
                    nuevaCapacidad.setText("");
                    nuevoCostoMb.setText("");
                    
                } 
                else 
                {
                    JOptionPane.showMessageDialog(null, "No se pudo modificar el bus en la base de datos.", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } 
            catch (CampoVacioException e) 
            {
                // Manejo de excepción de campo vacío
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } 
            catch (NumberFormatException e) 
            {         // Manejo de excepción de formato incorrecto para números
                JOptionPane.showMessageDialog(null, "La capacidad y el costo deben ser valores numéricos válidos.", "Error de formato", JOptionPane.ERROR_MESSAGE);
            }
        
             
     dialogoModificarBus.dispose();   
    }//GEN-LAST:event_confirmarMBActionPerformed

    
    private boolean modificarBusBD(String patente, int nuevaCapacidad, double nuevoCosto) 
    {
        String query = "UPDATE Buses SET capacidad = ?, costo_mantencion = ? WHERE patente = ?";

        try (Connection conn = empresa.getConexionBd(); 
             PreparedStatement pstmt = conn.prepareStatement(query)) 
        {

            pstmt.setInt(1, nuevaCapacidad);
            pstmt.setDouble(2, nuevoCosto);
            pstmt.setString(3, patente);

            int rowsAffected = pstmt.executeUpdate();
            return rowsAffected > 0; // Devuelve true si se actualizó correctamente
        } 
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(null, "Error al modificar el bus en la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }   
}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregarBus;
    private javax.swing.JButton botonCerrar;
    private javax.swing.JButton botonEliminarBus;
    private javax.swing.JButton botonModificarBus;
    private javax.swing.JButton cancelarAgregarBus;
    private javax.swing.JButton cancelarEliminar;
    private javax.swing.JButton cancelarMB;
    private javax.swing.JComboBox<String> comboBoxBuses;
    private javax.swing.JButton confirmarEliminar;
    private javax.swing.JButton confirmarMB;
    private javax.swing.JButton confirmarNuevoBus;
    private javax.swing.JDialog dialogoAgregarBus;
    private javax.swing.JDialog dialogoEliminarBus;
    private javax.swing.JDialog dialogoModificarBus;
    private javax.swing.JTextField fieldPatenteMB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JOptionPane jOptionPane;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JOptionPane jOptionPane2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField nuevaCapacidad;
    private javax.swing.JTextField nuevoCostoMb;
    private javax.swing.JOptionPane optionPaneMB;
    private javax.swing.JTextField rutaTextField;
    private javax.swing.JTable tablaBus;
    private javax.swing.JTextField textoCostoMantencionBus;
    private javax.swing.JTextField textoFieldEliminarBus;
    private javax.swing.JTextField textoNuevoBus;
    private javax.swing.JTextField textoRutaNuevoBus;
    private javax.swing.JLabel tituloAgregarBus;
    // End of variables declaration//GEN-END:variables
}
