package com.mycompany.siap;
import javax.swing.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import javax.swing.table.DefaultTableModel;



public class VentanaSelecccionarHorario extends javax.swing.JFrame {

    private Empresa empresa;
    private int id;
    
public VentanaSelecccionarHorario(Empresa em, int idr) {
        this.id = idr;
        empresa = em;

        initComponents();

        setLocationRelativeTo(null);

        // Set current date and format it
        LocalDate currentDate = LocalDate.now();
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String formattedDate = currentDate.format(dateFormatter);

        textoFecha.setText(formattedDate);
        textoRuta.setText(Integer.toString(id));

        // Adding dummy items to the combo box for demonstration
        comboBoxHorarios.addItem("Horario Salida");
        comboBoxHorarios.addItem("Patente Bus");
        comboBoxHorarios.addItem("Asientos Disponibles");
        comboBoxHorarios.addItem("Origen");

        actualizarTablaPorFecha(formattedDate);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emergenteCambiarFecha = new javax.swing.JDialog();
        cambiarDia = new javax.swing.JComboBox<>();
        cambiarMes = new javax.swing.JComboBox<>();
        dBotonConfirmar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        botonCancelarEmergente = new javax.swing.JButton();
        jOptionPane1 = new javax.swing.JOptionPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHorarios = new javax.swing.JTable();
        botonRealizarVenta = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        botonCerrar = new javax.swing.JButton();
        comboBoxHorarios = new javax.swing.JComboBox<>();
        textoFecha = new javax.swing.JLabel();
        botonVender = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        textoRuta = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuCambiarFecha = new javax.swing.JMenu();
        CambiarFecha = new javax.swing.JMenuItem();
        FechaActual = new javax.swing.JMenuItem();
        cambiar = new javax.swing.JMenu();
        menuCambiarR = new javax.swing.JMenuItem();

        emergenteCambiarFecha.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        emergenteCambiarFecha.setTitle("Dialogo");

        cambiarDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarDiaActionPerformed(evt);
            }
        });

        cambiarMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarMesActionPerformed(evt);
            }
        });

        dBotonConfirmar.setText("Confirmar");
        dBotonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dBotonConfirmarActionPerformed(evt);
            }
        });

        jLabel1.setText("Dia");

        jLabel2.setText("Mes");

        jLabel3.setText("Escoja El Mes luego el dia");

        botonCancelarEmergente.setText("Cancelar");
        botonCancelarEmergente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarEmergenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout emergenteCambiarFechaLayout = new javax.swing.GroupLayout(emergenteCambiarFecha.getContentPane());
        emergenteCambiarFecha.getContentPane().setLayout(emergenteCambiarFechaLayout);
        emergenteCambiarFechaLayout.setHorizontalGroup(
            emergenteCambiarFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, emergenteCambiarFechaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonCancelarEmergente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dBotonConfirmar)
                .addContainerGap())
            .addGroup(emergenteCambiarFechaLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(emergenteCambiarFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(emergenteCambiarFechaLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(emergenteCambiarFechaLayout.createSequentialGroup()
                        .addGroup(emergenteCambiarFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cambiarMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(86, 86, 86)
                        .addGroup(emergenteCambiarFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(emergenteCambiarFechaLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(emergenteCambiarFechaLayout.createSequentialGroup()
                                .addComponent(cambiarDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 102, Short.MAX_VALUE))))))
        );
        emergenteCambiarFechaLayout.setVerticalGroup(
            emergenteCambiarFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emergenteCambiarFechaLayout.createSequentialGroup()
                .addGroup(emergenteCambiarFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(emergenteCambiarFechaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(dBotonConfirmar))
                    .addGroup(emergenteCambiarFechaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(emergenteCambiarFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(2, 2, 2)
                        .addGroup(emergenteCambiarFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cambiarMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cambiarDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(botonCancelarEmergente)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Seleccion De Horario");

        tablaHorarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Horario Salida", "Asientos Disponibles", "Origen", "Destino"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaHorarios.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaHorarios);

        botonRealizarVenta.setText("Anular Pasaje");
        botonRealizarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRealizarVentaActionPerformed(evt);
            }
        });

        jButton2.setText("Cambiar Pasaje");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        botonCerrar.setText("Cerrar");
        botonCerrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCerrarActionPerformed(evt);
            }
        });

        comboBoxHorarios.setBorder(javax.swing.BorderFactory.createTitledBorder("Ordenar Por :"));
        comboBoxHorarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxHorariosActionPerformed(evt);
            }
        });

        textoFecha.setBorder(javax.swing.BorderFactory.createTitledBorder("Fecha Seleccionada"));

        botonVender.setText("Vender");
        botonVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVenderActionPerformed(evt);
            }
        });

        jLabel4.setText("Opciones Extra");

        textoRuta.setBorder(javax.swing.BorderFactory.createTitledBorder("Ruta"));

        menuCambiarFecha.setText("Seleccionar Fecha");
        menuCambiarFecha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menuCambiarFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCambiarFechaActionPerformed(evt);
            }
        });

        CambiarFecha.setText("Cambiar Fecha");
        CambiarFecha.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        CambiarFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambiarFechaActionPerformed(evt);
            }
        });
        menuCambiarFecha.add(CambiarFecha);

        FechaActual.setText("Fecha Actual");
        FechaActual.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        FechaActual.setContentAreaFilled(false);
        FechaActual.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        FechaActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FechaActualActionPerformed(evt);
            }
        });
        menuCambiarFecha.add(FechaActual);

        jMenuBar1.add(menuCambiarFecha);

        cambiar.setText("Cambiar Ruta");

        menuCambiarR.setText("Cambiar Ruta");
        menuCambiarR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCambiarRActionPerformed(evt);
            }
        });
        cambiar.add(menuCambiarR);

        jMenuBar1.add(cambiar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(botonCerrar))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboBoxHorarios, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(textoFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(textoRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonVender, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(botonRealizarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboBoxHorarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(textoRuta)
                        .addComponent(textoFecha)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonVender)
                    .addComponent(botonRealizarVenta))
                .addGap(75, 75, 75)
                .addComponent(botonCerrar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonRealizarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRealizarVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonRealizarVentaActionPerformed

    private void botonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCerrarActionPerformed

        this.dispose();
    }//GEN-LAST:event_botonCerrarActionPerformed

    private void menuCambiarFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCambiarFechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuCambiarFechaActionPerformed

    private void CambiarFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambiarFechaActionPerformed
       
        emergenteCambiarFecha.setLocationRelativeTo(null);
        emergenteCambiarFecha.setSize(400, 200);
        String[] meses = {
            "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", 
            "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"
        };
                
        cambiarMes.removeAllItems();  
        for (String mes : meses) {
        cambiarMes.addItem(mes);
        
        }
        
        cambiarMes.addActionListener(new java.awt.event.ActionListener() 
        {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            int mesSeleccionado = cambiarMes.getSelectedIndex();
            int diasEnMes;

          
            switch (mesSeleccionado) 
            {
                case 1: 
                    diasEnMes = 28; 
                    break;
                case 3: case 5: case 8: case 10: 
                    diasEnMes = 30;
                    break;
                default: 
                    diasEnMes = 31;
                    break;
            }
            
            
            cambiarDia.removeAllItems();  
            for (int i = 1; i <= diasEnMes; i++) 
            {
                    String t;
                    t = Integer.toString(i);
                    cambiarDia.addItem(t);
                }
            }
        });
                
        emergenteCambiarFecha.setVisible(true);
    }//GEN-LAST:event_CambiarFechaActionPerformed

    private void dBotonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dBotonConfirmarActionPerformed
        
        String diaSeleccionado = (String) cambiarDia.getSelectedItem();
       

        
        int dia = Integer.parseInt(diaSeleccionado);
        int mes = cambiarMes.getSelectedIndex() + 1;
//        int actualMes;
//        LocalDateTime tct;
//        tct = LocalDateTime.now();
//        actualMes = tct.getMonthValue();
//        //ocupar un error para mostrar las estas 

        int anio = LocalDateTime.now().getYear();

       
        LocalDate tt = LocalDate.of(anio, mes, dia); 

        
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String formattedDateTime = tt.format(formatter);
        

      
        textoFecha.setText(formattedDateTime);
        actualizarTablaPorFecha(formattedDateTime); 
        
        emergenteCambiarFecha.dispose();

    }//GEN-LAST:event_dBotonConfirmarActionPerformed
private void actualizarTablaPorFecha(String fechaSeleccionada) 
{
    DefaultTableModel modelo = (DefaultTableModel) tablaHorarios.getModel();
    modelo.setRowCount(0);
    
    Ruta r  = null;
    try {
        r = empresa.obtenerRuta(id);
    } catch (RutaNoEncontradaException e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
    
    if (r != null) {
        // Obtener la lista de horarios para la fecha seleccionada
        List<String> horarios = r.getHorarios(fechaSeleccionada); // Asegúrate de que este método devuelva una lista de String

        // Si hay horarios para la fecha seleccionada, agregarlos a la tabla
        if (horarios != null) {
            for (String horario : horarios) {
                modelo.addRow(new Object[] {
                    horario,              // Horario de salida como String
                    "PatenteBus",        // Aquí deberías obtener el valor real
                    "AsientosDisponibles", // Aquí deberías obtener el valor real
                    "Origen",            // Aquí deberías obtener el valor real
                    "Destino"            // Aquí deberías obtener el valor real
                });
            }
        }
    }

    // Establecer el modelo actualizado en la tabla
    tablaHorarios.setModel(modelo);
}


    private void cambiarDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarDiaActionPerformed
        
    }//GEN-LAST:event_cambiarDiaActionPerformed

    private void cambiarMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarMesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cambiarMesActionPerformed

    private void comboBoxHorariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxHorariosActionPerformed
        // Obtener el criterio de ordenación seleccionado
        String criterioSeleccionado = (String) comboBoxHorarios.getSelectedItem();

        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) tablaHorarios.getModel();

        // Crear una lista de las filas
        List<Object[]> filas = new ArrayList<>();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            Object[] fila = new Object[modelo.getColumnCount()];

            for (int j = 0; j < modelo.getColumnCount(); j++) {
                fila[j] = modelo.getValueAt(i, j);
            }
            filas.add(fila);
        }

        // Ordenar las filas según el criterio seleccionado
        Comparator<Object[]> comparador;
        switch (criterioSeleccionado) {
            case "Horario Salida":
                comparador = Comparator.comparing(fila -> (String) fila[0]); // Asumiendo que el horario es un String
                break;
            case "Patente Bus":
                comparador = Comparator.comparing(fila -> (String) fila[1]); // Patente como String
                break;
            case "Asientos Disponibles":
                comparador = Comparator.comparingInt(fila -> Integer.parseInt((String) fila[2])); // Convertir a Integer
                break;
            case "Origen":
                comparador = Comparator.comparing(fila -> (String) fila[3]); // Origen como String
                break;
            default:
                return; // Si no se selecciona un criterio válido
        }

        // Ordenar la lista de filas
        filas.sort(comparador);

        // Limpiar el modelo actual
        modelo.setRowCount(0);

        // Añadir las filas ordenadas de nuevo al modelo
        for (Object[] fila : filas) {
            modelo.addRow(fila);
        }

        // Actualizar la tabla con el nuevo modelo ordenado
        tablaHorarios.setModel(modelo);
    }//GEN-LAST:event_comboBoxHorariosActionPerformed

    private void FechaActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FechaActualActionPerformed
        LocalDateTime tt = LocalDateTime.now();
    
    
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String formattedDateTime = tt.format(formatter);
    
    
        textoFecha.setText(formattedDateTime);
    }//GEN-LAST:event_FechaActualActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void botonCancelarEmergenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarEmergenteActionPerformed
        emergenteCambiarFecha.dispose();
    }//GEN-LAST:event_botonCancelarEmergenteActionPerformed

    private void botonVenderActionPerformed(java.awt.event.ActionEvent evt) {

        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                VenderPasaje venderPasaje = new VenderPasaje(empresa);

                venderPasaje.setVisible(true);
                venderPasaje.setLocationRelativeTo(null);
            }

        });
                // Crear y mostrar el formulario de VenderPasaje
    }

    private void menuCambiarRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCambiarRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuCambiarRActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CambiarFecha;
    private javax.swing.JMenuItem FechaActual;
    private javax.swing.JButton botonCancelarEmergente;
    private javax.swing.JButton botonCerrar;
    private javax.swing.JButton botonRealizarVenta;
    private javax.swing.JButton botonVender;
    private javax.swing.JMenu cambiar;
    private javax.swing.JComboBox<String> cambiarDia;
    private javax.swing.JComboBox<String> cambiarMes;
    private javax.swing.JComboBox<String> comboBoxHorarios;
    private javax.swing.JButton dBotonConfirmar;
    private javax.swing.JDialog emergenteCambiarFecha;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuCambiarFecha;
    private javax.swing.JMenuItem menuCambiarR;
    private javax.swing.JTable tablaHorarios;
    private javax.swing.JLabel textoFecha;
    private javax.swing.JLabel textoRuta;
    // End of variables declaration//GEN-END:variables

}
